name: Format via PR Comment

on:
   issue_comment:
      types: [created]

permissions:
   contents: write
   pull-requests: write

jobs:
   format-on-comment:
      if: |
         github.event.issue.pull_request &&
         startsWith(github.event.comment.body, '/format')
      runs-on: ubuntu-latest
      steps:
         - name: Get PR Info
           id: pr
           uses: actions/github-script@v7
           with:
              result-encoding: string
              script: |
                 const { data: pr } = await github.rest.pulls.get({
                   owner: context.repo.owner,
                   repo: context.repo.repo,
                   pull_number: context.payload.issue.number
                 });

                 return JSON.stringify({
                   headRef: pr.head.ref,
                   headRepo: pr.head.repo.full_name,
                   isFork: pr.head.repo.fork,
                   defaultBranch: pr.base.ref
                 });

         - name: Parse PR Info
           id: parsed
           run: |
              echo "PR_DATA='${{ steps.pr.outputs.result }}'" >> $GITHUB_ENV
              echo "${{ steps.pr.outputs.result }}" > pr_info.json
              cat pr_info.json | jq -r '.headRef' > branch.txt
              cat pr_info.json | jq -r '.headRepo' > repo.txt

         - name: Checkout PR Branch
           uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
           with:
              repository: ${{ fromJson(steps.pr.outputs.result).headRepo }}
              ref: ${{ fromJson(steps.pr.outputs.result).headRef }}
              token: ${{ secrets.GITHUB_TOKEN }}

         - name: Set up Node.js
           uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
           with:
              node-version: 20

         - name: Install dependencies
           run: npm ci

         - name: Run Prettier format
           run: npm run format

         - name: Commit and push changes
           run: |
              git config user.name "${{ github.actor }}"
              git config user.email "${{ github.actor }}@users.noreply.github.com"

              git add .

              if git diff --cached --quiet; then
                echo "✅ No formatting changes."
              else
                echo "✅ Committing formatting changes..."
                git commit -m "style: auto-format via /format @format"
                git push origin HEAD:$(cat branch.txt)
              fi
